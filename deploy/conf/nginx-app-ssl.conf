# nginx-app-ssl.conf
# Settings:
#   - replace APP_HOST with server's FQDN

# the upstream component nginx needs to connect to
upstream django {
    ip_hash;
    server app:8000;     # app is the name defined by docker-compose
}

# http redirect
server {
    listen 80 default_server;

    # the domain name it will serve for
    server_name APP_HOST;  # set the server's fqdn

    root /dev/null;

    # User-Agent block
    if ( $http_user_agent ~* "Windows 95|Windows 98|wget|curl|libwww-perl|Jorgee" ) {
	    return 403;
    }

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$server_name$request_uri;

}

# https proxy pass
server {
    listen 443 ssl http2;

    # the domain name it will serve for
    server_name APP_HOST;  # set the server's fqdn
    charset     utf-8;

    # max upload size
    client_max_body_size 10M;   # adjust to taste

    root /dev/null;

	##
	# SSL config
	##

	ssl_session_timeout 10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 4096 bits
	ssl_dhparam /etc/nginx/dhparams.pem;

	# Secure config
	ssl_protocols TLSv1.3;
	ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384';
	ssl_ecdh_curve secp384r1;
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
	add_header Content-Security-Policy "default-src 'self' 'unsafe-inline';" always;
	add_header Referrer-Policy "same-origin" always;
    # The following should be already covered by the app
    #add_header X-Frame-Options "SAMEORIGIN" always;
    #add_header X-Content-Type-Options "nosniff" always;
    #add_header X-XSS-Protection "1; mode=block" always;
    # //

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;
	## verify chain of trust of OCSP response using Root CA and Intermediate certs
	# resolver google valid=3600s ipv6=off;
	resolver 8.8.8.8 8.8.4.4 valid=300s ipv6=off;
	resolver_timeout 10s;

    ssl_certificate         /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key     /etc/nginx/certs/privkey.pem;
    ssl_trusted_certificate /etc/nginx/certs/letsencrypt.pem;

    keepalive_timeout 10 10;

    # User-Agent block
    if ( $http_user_agent ~* "Windows 95|Windows 98|wget|curl|libwww-perl|Jorgee" ) {
	    return 403;
    }

    # Django media
    # Edit accordingly to your settings
    #location /media  {
    #    alias /srv/serve/persistent/media;
    #}

    # Django static
    # Edit accordingly to your settings
    #location /static {
    #    alias /srv/serve/volatile/static;
    #}

    # Send all non-media requests to the Django server.
    location / {
        proxy_pass http://django/;
        proxy_set_header   Host $server_name;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto https;
    }
}
# END nginx-app-ssl.conf
